# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- ShowFailure

name: $(Build.BuildId)

pool:
  vmImage: macos-13

variables:
  buildConfiguration: 'Release'
  solution: 'TestMopups.sln'
  project: 'TestMopups'
  appPathProject: '$(project)/$(project).csproj'
  appId: 'com.aiworldwide.testmopups'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)/ios'
  storeFile: '$(build.binariesDirectory)/$(buildConfiguration)/ios'
  major: '1'
  minor: '0'
  codesignKey: 'iPhone Distribution: American Innovations%2c Ltd. (HW8D73E73K)'
  
steps:

  - task: UseDotNet@2
    displayName: 'Install .NET 7'
    inputs:
      packageType: 'sdk'
      version: '7.0.x'

  - task: CmdLine@2
    displayName: "Install MAUI"
    inputs:
      script: 'dotnet workload install maui'

  - task: NuGetAuthenticate@1

  - script: dotnet restore /p:RuntimeIdentifier=ios-arm64 '$(appPathProject)'
    displayName: NuGet restore
    

  - task: ios-bundle-version@1
    displayName: "update bundle versions"
    inputs:
      sourcePath: '$(build.SourcesDirectory)/$(project)/Platforms/iOS/Info.plist'
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildId)'
      versionName: '$(major).$(minor).$(Build.BuildId)'
      printFile: true

  - task: InstallAppleCertificate@2
    name: "appc"
    displayName: "Install Apple Certificate"
    inputs:
      certSecureFile: 'iOSDistributionCert.p12'
      certPwd: '$(iOSCertPassword)'

  # Install an Apple provisioning profile required to build on a macOS agent machine
  - task: InstallAppleProvisioningProfile@1
    displayName: "install apple provisioning profile"
    inputs:
      provisioningProfileLocation: 'secureFiles' # Options: secureFiles, sourceRepository
      provProfileSecureFile: 'TestMopups_Distribution.mobileprovision'

  - task: Bash@3
    displayName: "Build and Sign"
    inputs:
      targetType: inline
      script: |
        dotnet publish '$(Build.SourcesDirectory)/$(appPathProject)' -c $(buildConfiguration) --verbosity m --no-restore -f net7.0-ios -r ios-arm64 --sc true -p:ArchiveOnBuild=true -p:ApplicationId=$(appId) -p:CodesignKey='$(codesignKey)' -p:CodesignProvision=$(APPLE_PROV_PROFILE_UUID)
      
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(agent.builddirectory)'
      Contents: '**/*.ipa'
      TargetFolder: '$(build.artifactstagingdirectory)'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact ios ipa'
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: 'mopups-ipa'
